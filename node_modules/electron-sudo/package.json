{
  "_args": [
    [
      {
        "raw": "electron-sudo@github:malept/electron-sudo#fix-linux-sudo-detection",
        "scope": null,
        "escapedName": "electron-sudo",
        "name": "electron-sudo",
        "rawSpec": "github:malept/electron-sudo#fix-linux-sudo-detection",
        "spec": "github:malept/electron-sudo#fix-linux-sudo-detection",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:malept/electron-sudo.git#fix-linux-sudo-detection",
          "sshUrl": "git+ssh://git@github.com/malept/electron-sudo.git#fix-linux-sudo-detection",
          "httpsUrl": "git+https://github.com/malept/electron-sudo.git#fix-linux-sudo-detection",
          "gitUrl": "git://github.com/malept/electron-sudo.git#fix-linux-sudo-detection",
          "shortcut": "github:malept/electron-sudo#fix-linux-sudo-detection",
          "directUrl": "https://raw.githubusercontent.com/malept/electron-sudo/fix-linux-sudo-detection/package.json"
        }
      },
      "/Users/michaelestwanick/Documents/njit/cs696/Electron-Forge/forge-app/node_modules/electron-forge"
    ]
  ],
  "_from": "malept/electron-sudo#fix-linux-sudo-detection",
  "_id": "electron-sudo@4.0.12",
  "_inCache": true,
  "_installable": true,
  "_location": "/electron-sudo",
  "_phantomChildren": {},
  "_requested": {
    "raw": "electron-sudo@github:malept/electron-sudo#fix-linux-sudo-detection",
    "scope": null,
    "escapedName": "electron-sudo",
    "name": "electron-sudo",
    "rawSpec": "github:malept/electron-sudo#fix-linux-sudo-detection",
    "spec": "github:malept/electron-sudo#fix-linux-sudo-detection",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:malept/electron-sudo.git#fix-linux-sudo-detection",
      "sshUrl": "git+ssh://git@github.com/malept/electron-sudo.git#fix-linux-sudo-detection",
      "httpsUrl": "git+https://github.com/malept/electron-sudo.git#fix-linux-sudo-detection",
      "gitUrl": "git://github.com/malept/electron-sudo.git#fix-linux-sudo-detection",
      "shortcut": "github:malept/electron-sudo#fix-linux-sudo-detection",
      "directUrl": "https://raw.githubusercontent.com/malept/electron-sudo/fix-linux-sudo-detection/package.json"
    }
  },
  "_requiredBy": [
    "/electron-forge"
  ],
  "_resolved": "git://github.com/malept/electron-sudo.git#73d135de6f0da7abb7e2b3cee9aa3a1d3fd4e4db",
  "_shasum": "7f11c978c38f32ba4302e4d03f944dc7e87fc92e",
  "_shrinkwrap": null,
  "_spec": "electron-sudo@github:malept/electron-sudo#fix-linux-sudo-detection",
  "_where": "/Users/michaelestwanick/Documents/njit/cs696/Electron-Forge/forge-app/node_modules/electron-forge",
  "author": {
    "name": "Aleksandr Komlev"
  },
  "bugs": {
    "url": "https://github.com/automation-stack/electron-sudo/issues"
  },
  "dependencies": {
    "babel-runtime": "^6.18.0",
    "bluebird": "^3.4.6"
  },
  "description": "Electron subprocess with administrative privileges, prompting the user with an OS dialog if necessary.",
  "devDependencies": {
    "babel-cli": "^6.10.1",
    "babel-core": "^6.10.4",
    "babel-eslint": "^6.0.0",
    "babel-loader": "^6.2.4",
    "babel-plugin-array-includes": "^2.0.3",
    "babel-plugin-lodash": "^2.2.1",
    "babel-plugin-module-alias": "^1.2.0",
    "babel-plugin-syntax-async-functions": "^6.5.0",
    "babel-plugin-syntax-decorators": "^6.5.0",
    "babel-plugin-syntax-flow": "^6.8.0",
    "babel-plugin-syntax-object-rest-spread": "^6.5.0",
    "babel-plugin-transform-async-to-module-method": "^6.7.0",
    "babel-plugin-transform-class-properties": "^6.6.0",
    "babel-plugin-transform-decorators-legacy": "^1.3.4",
    "babel-plugin-transform-flow-strip-types": "^6.8.0",
    "babel-plugin-transform-regenerator": "^6.6.5",
    "babel-plugin-transform-runtime": "^6.6.0",
    "babel-polyfill": "^6.16.0",
    "babel-preset-es2015": "^6.9.0",
    "babel-preset-stage-0": "^6.5.0",
    "babel-runtime": "^6.9.2",
    "chai": "^3.5.0",
    "copy-webpack-plugin": "^3.0.1",
    "dirty-chai": "^1.2.2",
    "eslint": "^2.6.0",
    "eslint-loader": "^1.3.0",
    "eslint-plugin-babel": "^3.2.0",
    "estraverse-fb": "^1.3.1",
    "json-loader": "^0.5.4",
    "mocha": "^2.4.5",
    "raw-loader": "^0.5.1",
    "source-map-support": "^0.4.0",
    "webpack": "^1.12.14",
    "webpack-dev-server": "^1.14.1",
    "webpack-module-hot-accept": "^1.0.4",
    "webpack-shell-plugin": "^0.4.2"
  },
  "gitHead": "73d135de6f0da7abb7e2b3cee9aa3a1d3fd4e4db",
  "homepage": "https://github.com/automation-stack/electron-sudo#readme",
  "keywords": [
    "sudo",
    "os",
    "dialog",
    "prompt",
    "command",
    "exec",
    "ui",
    "electron",
    "elevate",
    "administrative",
    "privileges",
    "UAC",
    "subprocess"
  ],
  "license": "MIT",
  "main": "./dist/index.js",
  "name": "electron-sudo",
  "optionalDependencies": {},
  "readme": "## Electron subprocess with administrative privileges\n\nRun a subprocess with administrative privileges, prompting the user with a graphical OS dialog if necessary. Useful for background subprocesse which run native Electron apps that need sudo.\n\n- `Windows`, uses [elevate utility](https://github.com/automation-stack/electron-sudo/tree/master/src/vendor/win32) with native `User Account Control (UAC)` prompt (no `PowerShell` required)\n- `OS X`, uses bundled [applet](https://github.com/automation-stack/electron-sudo/tree/master/src/bin/applet.app) (inspired by  [Joran Dirk Greef](https://github.com/jorangreef))\n- `Linux`, uses system `pkexec` or [gksudo](http://www.nongnu.org/gksu) (system or bundled).\n\nIf you don't trust binaries bundled in `npm` package you can manually build tools and use them instead.\n\n<img height=\"150px\" src=\"./assets/win32.png\">\n<img height=\"150px\" src=\"./assets/osx.png\">\n<img height=\"150px\" src=\"./assets/linux.png\">\n\n## Features\n  - Supports ```spawn``` and ```exec``` subprocess behavior\n  - Supports applications packaged as ```asar``` archive\n  - Separate password prompt for each call (use ```sh``` or ```bat``` script for single prompt)\n  - No external dependencies, does not depend on OS versions\n\n## Installation\n```\nnpm install electron-sudo\n```\n\n## Usage\n**Note: Your command should not start with the ```sudo``` prefix.**\n\n### Version 4.0.*\n\n```js\nimport Sudoer from 'electron-sudo';\n\nlet options = {name: 'electron sudo application'},\n    sudoer = new Sudoer(options);\n\n/* Spawn subprocess behavior */\nlet cp = await sudoer.spawn(\n  'echo', ['$PARAM'], {env: {PARAM: 'VALUE'}}\n);\ncp.on('close', () => {\n  /*\n    cp.output.stdout (Buffer)\n    cp.output.stderr (Buffer)\n  */\n});\n\n/* Exec subprocess behavior */\nlet result = await sudoer.exec(\n  'echo $PARAM', {env: {PARAM: 'VALUE'}}\n);\n/* result is Buffer with mixed (both stdout and stderr) output */\n\n\n/* Usage with Vanila JS */\n\nvar Sudoer = require('electron-sudo').default;\nvar sudoer = new Sudoer(options);\nsudoer.spawn('echo', ['$PARAM'], {env: {PARAM: 'VALUE'}}).then(function (cp) {\n  /*\n    cp.output.stdout (Buffer)\n    cp.output.stderr (Buffer)\n  */\n});\n\n```\n\n### Version 3.0.* (deprecated)\n\n```js\nvar sudo = require('electron-sudo');\nvar options = {\n  name: 'Your application name',\n  icns: '/path/to/icns/file' // (optional, only for MacOS),\n  process: {\n    options: {\n      // Can use custom environment variables for your privileged subprocess\n      env: {'VAR': 'VALUE'}\n      // ... and all other subprocess options described here\n      // https://nodejs.org/api/child_process.html#child_process_child_process_exec_command_options_callback\n    },\n    on: function(ps) {\n      ps.stdout.on('data', function(data) {});\n      setTimeout(function() {\n        ps.kill()\n      }.bind(ps), 50000);\n    }\n  }\n};\nsudo.exec('echo hello', options, function(error) {});\n```\n\n## Tests\n```\nnpm i && npm test\n```\n\n## Usage with Webpack\n\nWebpack config should contain ```__dirname``` equals ```true``` for work properly\n\n```js\n\nlet nodeModules = fs.readdirSync('./node_modules')\n    .filter((module) => {\n        return module !== '.bin';\n    })\n    .reduce((prev, module) => {\n        return Object.assign(prev, {[module]: 'commonjs ' + module});\n    }, {});\n\nexport default {\n    ...\n    target: 'electron',\n    node: {\n        /* http://webpack.github.io/docs/configuration.html#node */\n        __dirname: true\n    },\n    externals: nodeModules\n};\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/automation-stack/electron-sudo.git"
  },
  "scripts": {
    "build": "node_modules/webpack/bin/webpack.js --config ./webpack/config.babel.js",
    "build-win32": "node node_modules\\webpack\\bin\\webpack.js --config webpack\\config.babel.js",
    "lint": "node_modules/eslint/bin/eslint.js -c .eslintrc ./src",
    "prepublish": "npm run test",
    "test": "npm run build && node_modules/mocha/bin/mocha --compilers js:babel-core/register ./tests",
    "test-win32": "npm run build-win32 && node node_modules\\mocha\\bin\\mocha --compilers js:babel-core/register tests"
  },
  "version": "4.0.12"
}
